[project]
name = "bitbot"
version = "1.0.0"
dependencies = [
    "praw",
    "requests",
    "toml",
    "packaging",
    "PyGithub",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "xenon",
    "pytest",
    "hypothesis",
    "types-toml",
    "types-requests",
]

[tool.ruff]
# Follow Black's line length.
line-length = 88
indent-width = 4

# Target Python 3.10 for compatibility.
target-version = "py310"

# A strict selection of rules for high-quality code.
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C90", # mccabe complexity
    "B",   # flake8-bugbear
    "Q",   # flake8-quotes
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "PTH", # flake8-use-pathlib
    "RUF", # Ruff-specific rules
]

ignore = [
    "E501", # Line too long, handled by the formatter.
    "B008", # Do not perform function calls in argument defaults.
]

[tool.ruff.lint.mccabe]
# Set a conservative complexity threshold.
max-complexity = 10

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true # For now, to ease integration.

[tool.xenon]
# Set strict complexity limits.
max-absolute = "B"
max-modules = "A"
max-average = "A"
# Exclude files that are inherently complex or contain constants.
exclude = [
    "src/patch_file.py",
]