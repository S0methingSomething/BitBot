name: '[Release] Check, Patch, and Manage Reddit'
on:
  workflow_dispatch:
  schedule:
    - cron: '5 * * * *'
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check_and_release:
    name: 1. Check Source & Create Release
    runs-on: ubuntu-latest
    outputs:
      new_version_found: ${{ steps.release_manager.outputs.new_version_found }}
      new_version: ${{ steps.release_manager.outputs.version }}
      direct_download_url: ${{ steps.release_manager.outputs.direct_download_url }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-python@v5
        with: { python-version: '3.10' }
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      
      - run: pip install -r requirements.txt
        
      - name: Run Release Manager
        id: release_manager
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        # Execute the 'release' command from our new CLI tool
        run: python -m src.bitbot.cli release

  post_on_new_version:
    name: 2a. Post New Release to Reddit
    needs: check_and_release
    if: needs.check_and_release.outputs.new_version_found == 'true'
    runs-on: ubuntu-latest
    permissions: { contents: write }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.10' }
      - run: pip install -r requirements.txt
      - name: Run Reddit Poster Script
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        # Execute the 'post' command from our new CLI tool
        run: |
          python -m src.bitbot.cli post \
            --version=${{ needs.check_and_release.outputs.new_version }} \
            --direct-download-url='${{ needs.check_and_release.outputs.direct_download_url }}'
      - name: Commit state file
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "feat(bot): start monitoring new post for v${{ needs.check_and_release.outputs.new_version }} [skip ci]"
          file_pattern: "bot_state.json"

  sync_on_no_update:
    name: 2b. Sync Reddit History
    needs: check_and_release
    if: needs.check_and_release.outputs.new_version_found == 'false'
    runs-on: ubuntu-latest
    permissions: { contents: write }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.10' }
      - run: pip install -r requirements.txt
      - name: Run Reddit History Sync Script
        id: sync_script
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Execute the 'sync' command from our new CLI tool
        run: python -m src.bitbot.cli sync
      - name: Commit state file if changed
        if: steps.sync_script.outputs.state_changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "chore(bot): self-heal and sync reddit state [skip ci]"
          file_pattern: "bot_state.json"
