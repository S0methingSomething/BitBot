name: '[Multi-App Release] Check, Patch, and Manage Reddit'
on:
  workflow_dispatch:
  schedule:
    - cron: '0 1,16 * * *' # Run at 1 AM and 4 PM UTC
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  manage_releases:
    runs-on: ubuntu-latest
    outputs:
      new_releases_found: ${{ steps.manager.outputs.new_releases_found }}
      version: ${{ steps.manager.outputs.version }}
      urls: ${{ steps.manager.outputs.urls }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Run Release Manager
        id: manager
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python release_manager.py

  post_to_reddit:
    needs: manage_releases
    # Only run this job if the manager script found new releases
    if: needs.manage_releases.outputs.new_releases_found == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Post / Update Reddit
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: |
          python post_to_reddit.py \
            --version "${{ needs.manage_releases.outputs.version }}" \
            --urls '${{ needs.manage_releases.outputs.urls }}'
