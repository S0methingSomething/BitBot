name: '[Multi-App Release] Check, Patch, and Deploy'
on:
  workflow_dispatch:
  schedule:
    - cron: '0 1,16 * * *' # Run at 1 AM and 4 PM UTC
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  manage_releases:
    runs-on: ubuntu-latest
    outputs:
      new_releases_found: ${{ steps.manager.outputs.new_releases_found }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Dependencies
        run: make install
      - name: Run Release Manager
        id: manager
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # This is a placeholder for the new entry point
          # For now, we'll just assume new releases are found
          echo "new_releases_found=true" >> $GITHUB_OUTPUT

  generate_page:
    needs: manage_releases
    if: needs.manage_releases.outputs.new_releases_found == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Dependencies
        run: make install
      - name: Generate Static Page
        run: ./scripts/generate_page.py
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy_gh_pages:
    needs: generate_page
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
